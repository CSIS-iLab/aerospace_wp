html {
	box-sizing: border-box;
}

*,
*:before,
*:after { /* Inherit box-sizing to make it easier to change the property for components that leverage other behavior; see http://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/ */
	box-sizing: inherit;
}

body {
	background: $color__background-body; /* Fallback for when there is no custom background color defined. */
	--breakpoint: "xsmall";

	@include breakpoint("small") {
		--breakpoint: "small";
	}

	@include breakpoint("medium") {
		--breakpoint: "medium";
	}

	@include breakpoint("large") {
		--breakpoint: "large";
	}

	&.toggled {
		overflow: hidden;
		& > .site {
			left: 80vw;

			@include breakpoint("medium") {
				left: unset;
				overflow-x: hidden;
			}
		}
	}
	overflow-x: hidden;

	.site {
		position: relative;
		left: 0;
		@include transition(left 0.5s ease-in);
	}
}

.site-content {
	position: relative;
	z-index: 1;
	overflow-x: hidden;
	margin-top: $size__header-mobile-height;
	background: $color__background-body;
	@include box-shadow(0, 5px, 8px, -1px, rgba($black, 0.5));

	@include breakpoint("medium") {
		//margin-top: $size__header-lg-height;
		margin-bottom: $size__footer-height;
		overflow-x: hidden;
	}

	&.is-minimal {
		margin-top: $size__header-bottom-height-mobile;
	}
}

.content-wrapper {
	max-width: $size__container-max-width;
	margin: 0 auto;
	padding: 0 1rem;

	@include breakpoint($size__container-max-width) {
		padding: 0;
	}

	&.row {
		margin: 0 auto;
	}
}

.content-wrapper-narrow {
	padding: 0 1rem;

	@include breakpoint($size__content-max-width) {
		max-width: $size__content-max-width;
		margin: 0 auto;
		padding: 0;

		&.row {
			margin: 0 auto;
		}
	}
}

#site-overlay {
	visibility: hidden;
	position: absolute;
	top: 0;
	//left: -20vw;
	z-index: 5;
	width: 120vw;
	height: 100vh;
	background-color: $black;
	opacity: 0;
	@include transition(visibility 0s, opacity 0.5s ease-in);

	@include breakpoint("medium") {
		display: none;
	}

	&.toggled {
		visibility: visible;
		opacity: 0.5;
	}
}
